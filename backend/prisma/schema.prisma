generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Room {
  roomId      String @id
  startTimeMs BigInt
  endTimeMs   BigInt
  link        String @db.VarChar(512)
  createdAt   BigInt
  appointmentId BigInt? @map("appointment_id") @db.BigInt
}

model UserType {
  id         Int       @id @db.SmallInt
  typeName   String    @unique @map("type_name") @db.VarChar(100)
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime? @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")

  users      User[]

  @@map("user_types")
}

model User {
  id            BigInt    @id @default(autoincrement()) @db.BigInt
  email         String    @unique @db.VarChar(255)
  username      String?   @unique @db.VarChar(100)
  passwordHash  String    @map("password_hash") @db.VarChar(255)
  fullName      String?   @map("full_name") @db.VarChar(255)

  phone         String?   @db.VarChar(50)
  phoneVerified Boolean   @default(false) @map("phone_verified")

  userTypeId    Int       @map("user_type_id") @db.SmallInt

  isActive      Boolean   @default(true) @map("is_active")
  isSystem      Boolean   @default(false) @map("is_system")

  doctorId      BigInt?   @map("doctor_id") @db.BigInt

  lastSeenAt    DateTime? @map("last_seen_at")

  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  deletedAt     DateTime? @map("deleted_at")

  userType      UserType  @relation(fields: [userTypeId], references: [id])

  @@map("users")
}

model AppointmentStatus {
  id          Int       @id @db.TinyInt
  title       String    @db.VarChar(100)
  statusKey   String    @unique @map("status_key") @db.VarChar(50)
  description String?   @db.Text
  isActive    Boolean   @default(true) @map("is_active")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")

  @@map("appointment_statuses")
}


